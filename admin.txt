local player = game.Players.LocalPlayer
local commandBox = script.Parent
local mainFrame = commandBox.Parent
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local mouse = player:GetMouse()

-- Initialize attributes
if player:GetAttribute("Flying") == nil then player:SetAttribute("Flying", false) end
if player:GetAttribute("Noclip") == nil then player:SetAttribute("Noclip", false) end
if player:GetAttribute("CustomWalkSpeed") == nil then player:SetAttribute("CustomWalkSpeed", false) end
if player:GetAttribute("CustomJumpPower") == nil then player:SetAttribute("CustomJumpPower", false) end
if player:GetAttribute("ClickTP") == nil then player:SetAttribute("ClickTP", false) end

-- Flying keys
local keys = {W=false, A=false, S=false, D=false, Space=false, LeftShift=false}

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if keys[input.KeyCode.Name] ~= nil then keys[input.KeyCode.Name] = true end
end)
UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if keys[input.KeyCode.Name] ~= nil then keys[input.KeyCode.Name] = false end
end)

-- Press ; to focus the command box and clear it
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.Semicolon then
        commandBox.Text = ""       -- Clear the box
        commandBox:CaptureFocus()  -- Focus it
    end
end)

-- Fly
local function startFlying(speed)
    if player:GetAttribute("Flying") then return end
    player:SetAttribute("Flying", true)
    local character = player.Character
    if not character then return end
    local hrp = character:WaitForChild("HumanoidRootPart")
    speed = speed or 50

    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(1e5,1e5,1e5)
    bodyVelocity.Velocity = Vector3.new(0,0,0)
    bodyVelocity.Name = "FlyVelocity"
    bodyVelocity.Parent = hrp

    local conn
    conn = RunService.RenderStepped:Connect(function()
        if not player:GetAttribute("Flying") or not hrp.Parent then
            bodyVelocity:Destroy()
            conn:Disconnect()
            return
        end
        local move = Vector3.new()
        local cam = workspace.CurrentCamera
        if keys.W then move = move + cam.CFrame.LookVector end
        if keys.S then move = move - cam.CFrame.LookVector end
        if keys.A then move = move - cam.CFrame.RightVector end
        if keys.D then move = move + cam.CFrame.RightVector end
        if keys.Space then move = move + Vector3.new(0,1,0) end
        if keys.LeftShift then move = move - Vector3.new(0,1,0) end
        bodyVelocity.Velocity = (move.Magnitude>0) and move.Unit*speed or Vector3.new(0,0,0)
    end)
end

local function stopFlying()
    player:SetAttribute("Flying", false)
    local character = player.Character
    if not character then return end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if hrp then
        local bodyVelocity = hrp:FindFirstChild("FlyVelocity")
        if bodyVelocity then bodyVelocity:Destroy() end
    end
end

-- Noclip
local noclipConnection
local function enableNoclip()
    if player:GetAttribute("Noclip") then return end
    player:SetAttribute("Noclip", true)
    local character = player.Character
    if not character then return end
    if noclipConnection then noclipConnection:Disconnect() end
    noclipConnection = RunService.Stepped:Connect(function()
        if not player:GetAttribute("Noclip") or not character.Parent then
            for _, part in ipairs(character:GetDescendants()) do
                if part:IsA("BasePart") then part.CanCollide = true end
            end
            noclipConnection:Disconnect()
            return
        end
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") and part.Position.Y>1 then part.CanCollide=false end
        end
    end)
end

local function disableNoclip()
    if not player:GetAttribute("Noclip") then return end
    player:SetAttribute("Noclip", false)
    local character = player.Character
    if not character then return end
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then part.CanCollide = true end
    end
end

-- WalkSpeed
local function setWalkSpeed(speed)
    local character = player.Character
    if not character then return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = speed
        player:SetAttribute("CustomWalkSpeed", true)
    end
end

local function resetWalkSpeed()
    local character = player.Character
    if not character then return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = 16
        player:SetAttribute("CustomWalkSpeed", false)
    end
end

-- JumpPower
local function setJumpPower(power)
    local character = player.Character
    if not character then return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.UseJumpPower = true
        humanoid.JumpPower = power
        player:SetAttribute("CustomJumpPower", true)
    end
end

local function resetJumpPower()
    local character = player.Character
    if not character then return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.UseJumpPower = true
        humanoid.JumpPower = 50
        player:SetAttribute("CustomJumpPower", false)
    end
end

-- Teleport
local function teleportToPlayer(targetName)
    targetName = targetName:lower()
    local targetPlayer
    for _, p in ipairs(Players:GetPlayers()) do
        if p.Name:lower():find(targetName) then
            targetPlayer = p
            break
        end
    end
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local character = player.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,3,0)
        end
    end
end

-- ClickTP
local clickTPConnection
local function enableClickTP()
    if player:GetAttribute("ClickTP") then return end
    player:SetAttribute("ClickTP", true)

    clickTPConnection = mouse.Button1Down:Connect(function()
        if not player:GetAttribute("ClickTP") then return end
        local character = player.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            local mousePos = mouse.Hit.Position
            character.HumanoidRootPart.CFrame = CFrame.new(mousePos + Vector3.new(0,3,0))
        end
    end)
end

local function disableClickTP()
    if not player:GetAttribute("ClickTP") then return end
    player:SetAttribute("ClickTP", false)
    if clickTPConnection then
        clickTPConnection:Disconnect()
        clickTPConnection = nil
    end
end

-- Execute command function
local function executeCommand(text)
    text = text:lower():gsub("%s+", " ")
    local args = {}
    for word in text:gmatch("%S+") do table.insert(args, word) end

    local command = args[1]
    if command=="fly" then
        local speed = tonumber(args[2]) or 50
        startFlying(speed)
    elseif command=="unfly" then stopFlying()
    elseif command=="noclip" then enableNoclip()
    elseif command=="unnoclip" then disableNoclip()
    elseif command=="walkspeed" and args[2] then
        local speed = tonumber(args[2])
        if speed then setWalkSpeed(speed) end
    elseif command=="unwalkspeed" then resetWalkSpeed()
    elseif command=="jumppower" and args[2] then
        local power = tonumber(args[2])
        if power then setJumpPower(power) end
    elseif command=="unjumppower" then resetJumpPower()
    elseif command=="teleport" and args[2] then
        teleportToPlayer(args[2])
    elseif command=="clicktp" then enableClickTP()
    elseif command=="unclicktp" then disableClickTP()
    end
end

-- Press Enter to execute command
commandBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        executeCommand(commandBox.Text)
        commandBox.Text = "" -- clear after execution
    end
end)
